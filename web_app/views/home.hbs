<link rel="stylesheet" type="text/css" href="style.css" />

<div id="info">
  <p id="info_no_speech">No speech was detected. You may need to adjust your
    <a href="//support.google.com/chrome/bin/answer.py?hl=en&amp;answer=1407892">
      microphone settings</a>.</p>
      <p id="info_no_microphone" style="display:none">
        No microphone was found. Ensure that a microphone is installed and that
        <a href="//support.google.com/chrome/bin/answer.py?hl=en&amp;answer=1407892">
          microphone settings</a> are configured correctly.</p>
          <p id="info_blocked">Permission to use microphone is blocked. To change,
            go to chrome://settings/contentExceptions#media-stream</p>
            <p id="info_upgrade">Web Speech API is not supported by this browser.
             Upgrade to <a href="//www.google.com/chrome">Chrome</a>
             version 25 or later.</p>
           </div>
            <div id="results">
              <span id="final_span" class="final"></span>
              <span id="interim_span" class="interim"></span>
              <p>
            </div>

            <div class="facing-you">
              <i class="fa fa-arrow-down fa-lg" aria-hidden="true"></i>
              <div class="pressables">
                <div id="div_language_front">
                  <select id="select_language_front" onchange="updateCountryFront()"></select>
                  &nbsp;&nbsp;
                  <select id="select_dialect_front"></select>
                </div>
              </div>
              <div class="pressables">
                <button id="start_button_front" onclick="startButtonYou(event)"><i class="fa fa-circle" aria-hidden="true"></i>
                RECORD</button>
              </div>
            </div>
            <div class="facing-me">
              <div class="pressables">
                <button id="start_button" onclick="startButton(event)"><i class="fa fa-circle" aria-hidden="true"></i>
                RECORD</button>
              </div>
              <div class="pressables">
                <div id="div_language">
                  <select id="select_language" onchange="updateCountry()"></select>
                  &nbsp;&nbsp;
                  <select id="select_dialect"></select>
                </div>
              </div>
              <i class="fa fa-arrow-up fa-lg" aria-hidden="true"></i>
            </div>

            <div id="results-you">
              <span id="final_span_you" class="final"></span>
              <!-- <span id="interim_span_you" class="interim"></span> -->
              <p>
            </div>
              
              <script>
                var upper_translated = '';

                var langs =
                [['Afrikaans',       ['af-ZA']],
                ['Bahasa Indonesia',['id-ID']],
                ['Bahasa Melayu',   ['ms-MY']],
                ['Català',          ['ca-ES']],
                ['Čeština',         ['cs-CZ']],
                ['Deutsch',         ['de-DE']],
                ['English',         ['en-AU', 'Australia'],
                ['en-CA', 'Canada'],
                ['en-IN', 'India'],
                ['en-NZ', 'New Zealand'],
                ['en-ZA', 'South Africa'],
                ['en-GB', 'United Kingdom'],
                ['en-US', 'United States']],
                ['Español',         ['es-AR', 'Argentina'],
                ['es-BO', 'Bolivia'],
                ['es-CL', 'Chile'],
                ['es-CO', 'Colombia'],
                ['es-CR', 'Costa Rica'],
                ['es-EC', 'Ecuador'],
                ['es-SV', 'El Salvador'],
                ['es-ES', 'España'],
                ['es-US', 'Estados Unidos'],
                ['es-GT', 'Guatemala'],
                ['es-HN', 'Honduras'],
                ['es-MX', 'México'],
                ['es-NI', 'Nicaragua'],
                ['es-PA', 'Panamá'],
                ['es-PY', 'Paraguay'],
                ['es-PE', 'Perú'],
                ['es-PR', 'Puerto Rico'],
                ['es-DO', 'República Dominicana'],
                ['es-UY', 'Uruguay'],
                ['es-VE', 'Venezuela']],
                ['Euskara',         ['eu-ES']],
                ['Français',        ['fr-FR']],
                ['Galego',          ['gl-ES']],
                ['Hrvatski',        ['hr_HR']],
                ['IsiZulu',         ['zu-ZA']],
                ['Íslenska',        ['is-IS']],
                ['Italiano',        ['it-IT', 'Italia'],
                ['it-CH', 'Svizzera']],
                ['Magyar',          ['hu-HU']],
                ['Nederlands',      ['nl-NL']],
                ['Norsk bokmål',    ['nb-NO']],
                ['Polski',          ['pl-PL']],
                ['Português',       ['pt-BR', 'Brasil'],
                ['pt-PT', 'Portugal']],
                ['Română',          ['ro-RO']],
                ['Slovenčina',      ['sk-SK']],
                ['Suomi',           ['fi-FI']],
                ['Svenska',         ['sv-SE']],
                ['Türkçe',          ['tr-TR']],
                ['български',       ['bg-BG']],
                ['Pусский',         ['ru-RU']],
                ['Српски',          ['sr-RS']],
                ['한국어',            ['ko-KR']],
                ['中文',             ['cmn-Hans-CN', '普通话 (中国大陆)'],
                ['cmn-Hans-HK', '普通话 (香港)'],
                ['cmn-Hant-TW', '中文 (台灣)'],
                ['yue-Hant-HK', '粵語 (香港)']],
                ['日本語',           ['ja-JP']],
                ['Lingua latīna',   ['la']]];
                for (var i = 0; i < langs.length; i++) {
                  select_language.options[i] = new Option(langs[i][0], i);
                  select_language_front.options[i] = new Option(langs[i][0], i);
                }
                select_language.selectedIndex = 6;
                select_language_front.selectedIndex = 6;
                updateCountry();
                updateCountryFront();
                select_dialect.selectedIndex = 6;
                select_dialect_front.selectedIndex = 6;
                showInfo('info_start');
                function updateCountry() {
                  for (var i = select_dialect.options.length - 1; i >= 0; i--) {
                    select_dialect.remove(i);
                  }
                  var list = langs[select_language.selectedIndex];
                  for (var i = 1; i < list.length; i++) {
                    select_dialect.options.add(new Option(list[i][1], list[i][0]));
                  }
                  select_dialect.style.visibility = list[1].length == 1 ? 'hidden' : 'visible';
                }
                function updateCountryFront() {
                  for (var i = select_dialect_front.options.length - 1; i >= 0; i--) {
                    select_dialect_front.remove(i);
                  }
                  var list = langs[select_language_front.selectedIndex];
                  for (var i = 1; i < list.length; i++) {
                    select_dialect_front.options.add(new Option(list[i][1], list[i][0]));
                  }
                  select_dialect_front.style.visibility = list[1].length == 1 ? 'hidden' : 'visible';
                }
                var create_email = false;
                var final_transcript = '';
                var recognizing = false;
                var ignore_onend;
                var start_timestamp;
                if (!('webkitSpeechRecognition' in window)) {
                  upgrade();
                } else {
                  start_button.style.display = 'inline-block';
                  var recognition = new webkitSpeechRecognition();
                  recognition.continuous = true;
                  recognition.interimResults = true;
                  recognition.onstart = function() {
                    recognizing = true;
                    showInfo('info_speak_now');
                    // start_img.src = 'mic-animate.gif';
                  };
                  recognition.onerror = function(event) {
                    if (event.error == 'no-speech') {
                      start_img.src = 'mic.gif';
                      showInfo('info_no_speech');
                      ignore_onend = true;
                    }
                    if (event.error == 'audio-capture') {
                      start_img.src = 'mic.gif';
                      showInfo('info_no_microphone');
                      ignore_onend = true;
                    }
                    if (event.error == 'not-allowed') {
                      if (event.timeStamp - start_timestamp < 100) {
                        showInfo('info_blocked');
                      } else {
                        showInfo('info_denied');
                      }
                      ignore_onend = true;
                    }
                  };
                  recognition.onend = function() {
                    recognizing = false;
                    if (ignore_onend) {
                      return;
                    }
                    // start_img.src = 'mic.gif';
                    if (!final_transcript) {
                      showInfo('info_start');
                      return;
                    }
                    showInfo('');
                    if (window.getSelection) {
                      window.getSelection().removeAllRanges();
                      var range = document.createRange();
                      range.selectNode(document.getElementById('final_span'));
                      window.getSelection().addRange(range);
                    }
                    if (create_email) {
                      create_email = false;
                      createEmail();
                    }
                  };
                  recognition.onresult = function(event) {
                    var interim_transcript = '';
                    for (var i = event.resultIndex; i < event.results.length; ++i) {
                      if (event.results[i].isFinal) {
                        final_transcript += event.results[i][0].transcript;
                      } else {
                        interim_transcript += event.results[i][0].transcript;
                      }
                    }
                    // translate(final_transcript, 'en');
                    final_transcript = capitalize(final_transcript);
                    final_span.innerHTML = linebreak(final_transcript);
                    interim_span.innerHTML = linebreak(interim_transcript);
                    
                    // if (final_transcript) {
                    //   startTranslate(final_transcript, 'fr');
                    // }

                    
                    startTranslate(interim_transcript, 'zh');
                    
                    
                    if (final_transcript || interim_transcript) {
                      showButtons('inline-block');
                    }
                  };
                }
                function upgrade() {
                  start_button.style.visibility = 'hidden';
                  showInfo('info_upgrade');
                }
                var two_line = /\n\n/g;
                var one_line = /\n/g;
                function linebreak(s) {
                  return s.replace(two_line, '<p></p>').replace(one_line, '<br>');
                }
                var first_char = /\S/;
                function capitalize(s) {
                  return s.replace(first_char, function(m) { return m.toUpperCase(); });
                }
                function startButton(event) {
                  if (recognizing) {
                    recognition.stop();
                    return;
                  }
                  final_transcript = '';
                  recognition.lang = select_dialect.value;
                  recognition.start();
                  ignore_onend = false;
                  final_span.innerHTML = '';
                  interim_span.innerHTML = '';
                  start_img.src = 'mic-slash.gif';
                  showInfo('info_allow');
                  showButtons('none');
                  start_timestamp = event.timeStamp;
                }
                
                function startButtonFront(event) {
                  if (recognizing) {
                    recognition.stop();
                    return;
                  }
                  final_transcript = '';
                  recognition.lang = select_dialect.value;
                  recognition.start();
                  ignore_onend = false;
                  final_span.innerHTML = '';
                  interim_span.innerHTML = '';
                  start_img.src = 'mic-slash.gif';
                  showInfo('info_allow');
                  showButtons('none');
                  start_timestamp = event.timeStamp;
                }
                
                function startTranslate(message, country) {
                  // console.log(message);
                  // console.log(country);
                  
                  socket.emit('untranslated', {
                            data_message : message,
                            data_country : country
                        });
                  // console.log('emitted')
                  socket.on('translated', function(data){
                      console.log(data.tr_message);
                      final_transcript = data.tr_message;
                      console.log(upper_translated);
                  });

                  
                  // return $.ajax({
                  //     url: '/translate',
                  //     type: 'POST',
                  //     dataType: 'json',
                  //     data: {
                  //       data_message : message,
                  //       data_country : country
                  //     }
                  // }).done(function (data) {
                  //   console.log(data)
                  // });
                }

                // function translate(input, target) {
                //   const Translate = require('@google-cloud/translate');
                //   // Instantiates a client
                //   const translate = Translate({
                //     // The Translate API uses an API key for authentication. This sample looks
                //     // for the key in an environment variable.
                //     key: 'AIzaSyCP-TFmvNTa7JuoQCNt0q5f8WjzT_IVkIc'
                //   });

                //   // Translates the text into the target language. "input" can be a string for
                //   // translating a single piece of text, or an array of strings for translating
                //   // multiple texts.
                //   translate.translate(input, target, (err, translation) => {
                //     if (err) {
                //       console.error(err);
                //       return;
                //     }
                //     console.log(translation);
                //   });
                // }  

                function showInfo(s) {
                  if (s) {
                    for (var child = info.firstChild; child; child = child.nextSibling) {
                      if (child.style) {
                        child.style.display = child.id == s ? 'inline' : 'none';
                      }
                    }
                    info.style.visibility = 'visible';
                  } else {
                    info.style.visibility = 'hidden';
                  }
                }
                var current_style;
                function showButtons(style) {
                  if (style == current_style) {
                    return;
                  }
                  current_style = style;
                }
              </script>
            